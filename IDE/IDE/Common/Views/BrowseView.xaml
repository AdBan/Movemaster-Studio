<UserControl x:Class="IDE.Common.Views.Browse"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:converters="clr-namespace:IDE.Common.ViewModels.Converters"
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:k="http://schemas.microsoft.com/kinect/2013"
             xmlns:models="clr-namespace:IDE.Common.Models"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800">


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:ColorToBrush x:Key="ColorToBrush"/>
            <converters:ConnectionToTextConverter x:Key="ConnectionConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>



    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220*"/>
            <ColumnDefinition Width="71*"/>
            <ColumnDefinition Width="576*"/>
            <ColumnDefinition Width="33*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="23*"/>
            <RowDefinition Height="193*"/>
            <RowDefinition Height="84*"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding Path=Manipulator.Connected, Converter={StaticResource ConnectionConverter}}"/>
            <materialDesign:Badged Margin="10 0 0 0" Badge="!" BadgeColorZoneMode="Dark">
                <ToggleButton x:Name="ConnectionToggle" Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" IsChecked="{Binding Path=Manipulator.Connected, Mode=OneWay}" Command="{Binding ConnectionCommand}" CommandParameter="{Binding ElementName=ConnectionToggle, Path=IsChecked}"/>
            </materialDesign:Badged>
        </StackPanel>

        <!--#region RemoteProgram List-->

        <Border Margin="0,0,20,0" Width="Auto" CornerRadius="10" BorderBrush="{Binding Path=Appearance.ThemeColor, Converter={StaticResource ColorToBrush}}" BorderThickness="3" Grid.Row="1"  Grid.RowSpan="2" Grid.ColumnSpan="2">
            <DockPanel Height="Auto">
                <TextBlock x:Name="textBlockGridHeader" Text="Available remote programs:" Style="{StaticResource Heading2}" Margin="20,3,0,0" DockPanel.Dock="Top"/>
                <DataGrid ItemsSource="{Binding RemotePrograms}" SelectedItem="{Binding SelectedRemoteProgram}" AutoGenerateColumns="False" DockPanel.Dock="Bottom">

                    <DataGrid.Columns>
                        <mui:DataGridTextColumn Header="Name" Binding="{Binding Name, Mode=OneWay}"/>
                        <mui:DataGridTextColumn Header="Size" Binding="{Binding Size, Mode=OneWay}"/>
                        <mui:DataGridTextColumn Header="Last edited" Binding="{Binding Timestamp, Mode=OneWay}"/>
                    </DataGrid.Columns>

                    <DataGrid.Resources>
                        <ContextMenu x:Key="RemoteContextMenu">
                            <ContextMenu.Items>
                                <MenuItem Header="Refresh" Command="{Binding DataContext.RefreshClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" ToolTip="Refreshes list of programs stored on manipulator." CommandParameter="Refresh">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/Refresh-16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Acquire" Command="{Binding DataContext.DownloadClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" ToolTip="Acquiring program from manipulator to be stored on local drive." CommandParameter="Pull">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/Download-16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Execute" Command="{Binding DataContext.RunClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" ToolTip="Starts executing selected program." CommandParameter="Execute">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/Play-16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Send new" Command="{Binding DataContext.UploadClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" ToolTip="Sends program from local drive to manipulator." CommandParameter="Pull">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/Upload-16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu.Items>
                        </ContextMenu>
                    </DataGrid.Resources>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Refresh" Command="{Binding DataContext.RefreshClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" ToolTip="Refreshes list of programs stored on manipulator." CommandParameter="Refresh">
                                <MenuItem.Icon>
                                    <Image Source="/Icons/Refresh-16.png"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Send new" Command="{Binding DataContext.UploadClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" ToolTip="Sends program from local drive to manipulator." CommandParameter="Pull">
                                <MenuItem.Icon>
                                    <Image Source="/Icons/Upload-16.png"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>

                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                            <Setter Property="ContextMenu" Value="{StaticResource RemoteContextMenu}"/>
                        </Style>
                    </DataGrid.RowStyle>

                </DataGrid>
            </DockPanel>
        </Border>

        <!--#endregion-->

        <!--#region KINECT STUFF-->

        <Border Grid.Column="1" Margin="62.8,0,0.4,10" CornerRadius="10" BorderBrush="{Binding Path=Appearance.ThemeColor, Converter={StaticResource ColorToBrush}}" BorderThickness="3" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="1">

        </Border>

        <!--#endregion-->

        <!--#region Command window-->

        <Border Grid.Row="2" Grid.Column="1" CornerRadius="10" BorderBrush="{Binding Path=Appearance.ThemeColor, Converter={StaticResource ColorToBrush}}" BorderThickness="3" Grid.ColumnSpan="2" Margin="62.8,0,0.4,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="9*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>

                <models:ProgramEditor  x:Name="CommandHistory" Padding="3" Background="Transparent" IsHighlightingEnabled="True" IsReadOnly="True"  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,3" BorderBrush="{Binding Path=Appearance.ThemeColor}" ShowLineNumbers="False" Foreground="{Binding ElementName=textBlockGridHeader, Path=Foreground}">
                    <i:Interaction.Behaviors>
                        <models:AvalonEditBehaviour GiveMeTheText="{Binding CommandHistoryText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </i:Interaction.Behaviors>

                    <models:ProgramEditor.ContextMenu>
                        <ContextMenu>

                            <MenuItem Header="Font Family">
                                <MenuItem.Icon>
                                    <Image Source="/Icons/Font_16.png"/>
                                </MenuItem.Icon>
                                <MenuItem Header="Times New Roman" Command="{Binding ChangeFontCommand}" CommandParameter="Times New Roman">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/Font_16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Arial" Command="{Binding ChangeFontCommand}" CommandParameter="Arial">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/Font_16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Calibri" Command="{Binding ChangeFontCommand}" CommandParameter="Calibri">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/Font_16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Segoe UI" Command="{Binding ChangeFontCommand}" CommandParameter="Segoe UI">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/Font_16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>

                            <Separator/>

                            <MenuItem Header="Export" Command="{Binding ExportHistoryCommand}">
                                <MenuItem.Icon>
                                    <Image Source="/Icons/Export_16.png"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Clear" Command="{Binding ClearHistoryCommand}">
                                <MenuItem.Icon>
                                    <Image Source="/Icons/clear_16.png"/>
                                </MenuItem.Icon>
                            </MenuItem>

                        </ContextMenu>

                    </models:ProgramEditor.ContextMenu>

                </models:ProgramEditor>

                <DockPanel Grid.Row="1">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                        <Button Content="Send" Command="{Binding SendClickCommand}"  Width="65" HorizontalAlignment="Right" DockPanel.Dock="Right"/>
                        <ToggleButton x:Name="SyntaxCheckToggle" Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" VerticalAlignment="Center" ToolTip="If checked, syntax will be validated" />
                    </StackPanel>
                    <models:ProgramEditor x:Name="CommandInput" Padding="3" IsOneLine="True" DoSyntaxCheck="{Binding ElementName=SyntaxCheckToggle, Path=IsChecked}" IsHighlightingEnabled="True" IsIntellisenseEnabled="True" Background="Transparent" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" BorderThickness="0,0,3,0" BorderBrush="{Binding Path=Appearance.ThemeColor}" Foreground="{Binding ElementName=textBlockGridHeader, Path=Foreground}" ShowLineNumbers="False">
                        <i:Interaction.Behaviors>
                            <models:AvalonEditBehaviour GiveMeTheText="{Binding CommandInputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </i:Interaction.Behaviors>

                        <models:ProgramEditor.ContextMenu>
                            <ContextMenu>

                                <MenuItem Header="Font Family">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/Font_16.png"/>
                                    </MenuItem.Icon>
                                    <MenuItem Header="Times New Roman" Command="{Binding ChangeFontCommand}" CommandParameter="Times New Roman">
                                        <MenuItem.Icon>
                                            <Image Source="/Icons/Font_16.png"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Arial" Command="{Binding ChangeFontCommand}" CommandParameter="Arial">
                                        <MenuItem.Icon>
                                            <Image Source="/Icons/Font_16.png"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Calibri" Command="{Binding ChangeFontCommand}" CommandParameter="Calibri">
                                        <MenuItem.Icon>
                                            <Image Source="/Icons/Font_16.png"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Segoe UI" Command="{Binding ChangeFontCommand}" CommandParameter="Segoe UI">
                                        <MenuItem.Icon>
                                            <Image Source="/Icons/Font_16.png"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </MenuItem>

                            </ContextMenu>
                        </models:ProgramEditor.ContextMenu>

                    </models:ProgramEditor>

                </DockPanel>
            </Grid>
        </Border>

        <!--#endregion-->

    </Grid>
</UserControl>
