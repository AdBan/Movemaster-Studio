<UserControl x:Class="IDE.Common.Views.Browse"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:converters="clr-namespace:IDE.Common.ViewModels.Converters"
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:models="clr-namespace:IDE.Common.Models"
             xmlns:avalon="http://icsharpcode.net/sharpdevelop/avalonedit"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="900">


    <UserControl.Resources>
        <ResourceDictionary>
            <converters:ColorToBrush x:Key="ColorToBrush"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="grid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220*"/>
            <ColumnDefinition Width="71*"/>
            <ColumnDefinition Width="576*"/>
            <ColumnDefinition Width="33*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="108*"/>
            <RowDefinition Height="19*"/>
            <RowDefinition Height="23*"/>
        </Grid.RowDefinitions>


        <TextBlock x:Name="textBlockGridHeader" Text="Available remote programs:" Style="{StaticResource Heading2}" Margin="0,0,575.2,8" Grid.ColumnSpan="3"/>
        <Border Margin="0,30,0.2,0" Width="Auto" CornerRadius="10" BorderBrush="{Binding Path=Appearance.ThemeColor, Converter={StaticResource ColorToBrush}}" BorderThickness="3">
            <DataGrid ItemsSource="{Binding RemotePrograms}" SelectedItem="{Binding SelectedRemoteProgram}" AutoGenerateColumns="False">

                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Refresh"  Command="{Binding ContextClickCommand}" ToolTip="Refreshes list of available programs." CommandParameter="{Binding DataContext.RemoteProgram, RelativeSource={RelativeSource Mode=Self}}"/>
                        <MenuItem Header="Pull"     Command="{Binding}" ToolTip="Sends selected program from manipulator to user."/>
                        <MenuItem Header="Execute"  Command="{Binding}" ToolTip="Starts executing selected program."/>
                    </ContextMenu>
                </DataGrid.ContextMenu>

                <DataGrid.Columns>
                    <mui:DataGridTextColumn Header="Name" Binding="{Binding Name, Mode=OneWay}"/>
                    <mui:DataGridTextColumn Header="Size" Binding="{Binding Size, Mode=OneWay}"/>
                    <mui:DataGridTextColumn Header="Last edited" Binding="{Binding Timestamp, Mode=OneWay}"/>
                </DataGrid.Columns>

            </DataGrid>
        </Border>

        <!--Command window-->
        <Border Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="71,0,0.2,0" CornerRadius="10" BorderBrush="{Binding Path=Appearance.ThemeColor, Converter={StaticResource ColorToBrush}}" BorderThickness="3">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="9*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>


                <models:ProgramEditor  x:Name="CommandHistory" Padding="3" Background="Transparent" IsHighlightingEnabled="True" IsReadOnly="True"  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,3" BorderBrush="{Binding Path=Appearance.ThemeColor}" ShowLineNumbers="False" IsIntellisenseEnabled="False">
                    <i:Interaction.Behaviors>
                        <models:AvalonEditBehaviour GiveMeTheText="{Binding CommandHistoryText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </i:Interaction.Behaviors>

                    <models:ProgramEditor.ContextMenu>
                        <ContextMenu>

                            <MenuItem Header="Font Family">
                                <MenuItem.Icon>
                                    <Image Source="/Icons/Delete.png"/>
                                </MenuItem.Icon>
                                <MenuItem Header="Times New Roman" Command="{Binding ChangeFontCommand}" CommandParameter="Times New Roman"/>
                                <MenuItem Header="Arial" Command="{Binding ChangeFontCommand}" CommandParameter="Arial"/>
                                <MenuItem Header="Calibri" Command="{Binding ChangeFontCommand}" CommandParameter="Calibri"/>
                                <MenuItem Header="Segoe UI" Command="{Binding ChangeFontCommand}" CommandParameter="Segoe UI"/>
                            </MenuItem>

                            <Separator/>

                            <MenuItem Header="Export" Command="{Binding ExportHistoryCommand}">
                                <MenuItem.Icon>
                                    <Image Source="/Icons/Delete.png"/>
                                </MenuItem.Icon>
                            </MenuItem>

                            <MenuItem Header="Clear" Command="{Binding ClearHistoryCommand}">
                                <MenuItem.Icon>
                                    <Image Source="/Icons/Delete.png"/>
                                </MenuItem.Icon>
                            </MenuItem>

                        </ContextMenu>
                    </models:ProgramEditor.ContextMenu>

                </models:ProgramEditor>

                <DockPanel Grid.Row="1">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                        <Button Content="Send" Command="{Binding SendClickCommand}"  Width="75" HorizontalAlignment="Right" DockPanel.Dock="Right"/>
                        <Controls:ToggleSwitch x:Name="SyntaxCheckToggle" MaxWidth="75" Margin="0,-5,0,0"  ThumbIndicatorBrush="#FFC1C1C1" ToolTip="If checked, syntax will be validated." OffSwitchBrush="Red" OnSwitchBrush="Green" OffLabel="" OnLabel=""/>
                    </StackPanel>
                    <models:ProgramEditor x:Name="CommandInput" Padding="3" IsOneLine="True" DoSyntaxCheck="{Binding ElementName=SyntaxCheckToggle, Path=IsChecked}" IsHighlightingEnabled="True" IsIntellisenseEnabled="True" Background="Transparent" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" BorderThickness="0,0,3,0" BorderBrush="{Binding Path=Appearance.ThemeColor}" Foreground="{Binding ElementName=textBlockGridHeader, Path=Foreground}" ShowLineNumbers="False">
                        <i:Interaction.Behaviors>
                            <models:AvalonEditBehaviour GiveMeTheText="{Binding CommandInputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </i:Interaction.Behaviors>

                        <models:ProgramEditor.ContextMenu>
                            <ContextMenu>

                                <MenuItem Header="Font Family">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/Delete.png"/>
                                    </MenuItem.Icon>
                                    <MenuItem Header="Times New Roman" Command="{Binding ChangeFontCommand}" CommandParameter="Times New Roman"/>
                                    <MenuItem Header="Arial" Command="{Binding ChangeFontCommand}" CommandParameter="Arial"/>
                                    <MenuItem Header="Calibri" Command="{Binding ChangeFontCommand}" CommandParameter="Calibri"/>
                                    <MenuItem Header="Segoe UI" Command="{Binding ChangeFontCommand}" CommandParameter="Segoe UI"/>
                                </MenuItem>

                            </ContextMenu>
                        </models:ProgramEditor.ContextMenu>

                    </models:ProgramEditor>

                </DockPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>
