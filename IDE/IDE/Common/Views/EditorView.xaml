<UserControl x:Name="window"
             x:Class="IDE.Common.Views.Editor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:converters="clr-namespace:IDE.Common.ViewModels.Converters"
             d:DesignHeight="300" d:DesignWidth="300"
             mc:Ignorable="d"
             
             xmlns:RadialMenu="clr-namespace:RadialMenu.Controls;assembly=RadialMenu"
             xmlns:properties="clr-namespace:IDE.Properties"
             xmlns:ct="clr-namespace:ChromeTabs;assembly=ChromeTabs"
             xmlns:ctConv="clr-namespace:ChromeTabs.Converters;assembly=ChromeTabs">


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary  Source="/Icons/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:InvertBooleanConverter x:Key="InvertBoolean"/>
            <ResourceDictionary x:Key="lol">
                <Canvas x:Key="appbar_settings" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                    <Path Width="38.9239" Height="38.9239" Canvas.Left="18.538" Canvas.Top="18.5381" Stretch="Fill" Fill="{DynamicResource BlackBrush}" Data="F1 M 38,23.5C 38.8643,23.5 39.7109,23.5756 40.5337,23.7206L 42.6275,18.5381L 48.1901,20.787L 46.0964,25.9692C 47.6473,27.0149 48.9851,28.3527 50.0308,29.9036L 55.213,27.8099L 57.4619,33.3725L 52.2794,35.4664C 52.4244,36.2891 52.5,37.1357 52.5,38C 52.5,38.8643 52.4244,39.7109 52.2794,40.5337L 57.4619,42.6275L 55.213,48.1901L 50.0308,46.0964C 49.0795,47.5073 47.8865,48.7418 46.5112,49.7405L 48.7844,54.8462L 43.3041,57.2891L 41.0307,52.1828C 40.0533,52.3906 39.0394,52.5 38,52.5C 37.1357,52.5 36.2891,52.4244 35.4664,52.2794L 33.3725,57.462L 27.8099,55.213L 29.9036,50.0309C 28.3527,48.9851 27.0149,47.6473 25.9691,46.0964L 20.787,48.1901L 18.538,42.6275L 23.7206,40.5336C 23.5756,39.7109 23.5,38.8643 23.5,38C 23.5,37.1357 23.5756,36.2891 23.7206,35.4664L 18.538,33.3725L 20.787,27.8099L 25.9691,29.9036C 26.9205,28.4927 28.1135,27.2582 29.4889,26.2594L 27.2157,21.1537L 32.6959,18.7109L 34.9694,23.8172C 35.9468,23.6094 36.9606,23.5 38,23.5 Z M 38,28C 32.4771,28 28,32.4772 28,38C 28,43.5229 32.4771,48 38,48C 43.5228,48 48,43.5229 48,38C 48,32.4772 43.5228,28 38,28 Z "/>
                </Canvas>
            </ResourceDictionary>
        </ResourceDictionary>
    </UserControl.Resources>



    <Grid>

        <!--#region RowDefinitions-->
        
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="9*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="6*"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>
        
        <!--#endregion-->
        
        <!--#region Menu-->

        <!-- Button enabling radial menu -->
        <RadialMenu:RadialMenu IsOpen="{Binding RadialMenuIsOpen, Converter={StaticResource InvertBoolean}}" Grid.RowSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-100,-125,0,0" ToolTip="Options">
            <RadialMenu:RadialMenu.CentralItem>
                <RadialMenu:RadialMenuCentralItem Command="{Binding OpenRadialMenuCommand}" BorderBrush="{Binding Path=Appearance.ThemeColor}">
                    <Rectangle Width="25" Height="25" Visibility="{Binding RadialMenuEnableButtonVisibility}">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_lines_horizontal_4}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                </RadialMenu:RadialMenuCentralItem>
            </RadialMenu:RadialMenu.CentralItem>
        </RadialMenu:RadialMenu>


        <!-- Radial menu -->
        <RadialMenu:RadialMenu IsOpen="{Binding RadialMenuIsOpen}" 
                               Grid.RowSpan="2" 
                               HorizontalAlignment="Left" 
                               VerticalAlignment="Top" 
                               Margin="-100,-125,0,0"
                               Panel.ZIndex="99">

            <!-- CentralMenuItem -->

            <RadialMenu:RadialMenu.CentralItem>
                <RadialMenu:RadialMenuCentralItem Command="{Binding CloseRadialMenuCommand}" BorderBrush="{Binding Path=Appearance.ThemeColor}" ToolTip="Close/Back">
                    <Rectangle Width="25" Height="25">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_close}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                </RadialMenu:RadialMenuCentralItem>
            </RadialMenu:RadialMenu.CentralItem>

            <!-- MenuItems Around -->
            
            

            <RadialMenu:RadialMenuItem Visibility="Hidden" />

            <RadialMenu:RadialMenuItem Command="{Binding RadialMenuItem3Command}" Visibility="{Binding RadialMenuItem3Visibility}" ArrowBackground="{Binding RadialMenuArrow3Background}" EdgeBackground="{Binding Path=Appearance.ThemeColor}">
                <WrapPanel Orientation="Vertical">
                    <Rectangle Width="25" Height="25" Visibility="{Binding RadialMenuItem3IconVisibility}">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_settings}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="{Binding RadialMenuItem3Text}"  FontSize="14" TextAlignment="Center"/>
                </WrapPanel>
            </RadialMenu:RadialMenuItem>

            <RadialMenu:RadialMenuItem Command="{Binding RadialMenuItem2Command}" Visibility="{Binding RadialMenuItem2Visibility}" ArrowBackground="{Binding RadialMenuArrow2Background}" EdgeBackground="{Binding Path=Appearance.ThemeColor}">
                <WrapPanel Orientation="Vertical">
                    <Rectangle Width="25" Height="25" Visibility="{Binding RadialMenuItem2IconVisibility}">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_save}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="{Binding RadialMenuItem2Text}"  FontSize="14" TextAlignment="Center"/>
                    <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=RadialMenuCheckbox2IsChecked, Mode=OneWay}" Visibility="{Binding RadialMenuCheckbox2Visibility}" BorderBrush="{Binding Path=Appearance.ThemeColor}"/>
                </WrapPanel>
            </RadialMenu:RadialMenuItem>

            <RadialMenu:RadialMenuItem Command="{Binding RadialMenuItem1Command}" Visibility="{Binding RadialMenuItem1Visibility}" ArrowBackground="{Binding RadialMenuArrow1Background}" EdgeBackground="{Binding Path=Appearance.ThemeColor}">
                <WrapPanel Orientation="Vertical">
                    <Rectangle Width="20" Height="25" Visibility="{Binding RadialMenuItem1IconVisibility}">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_page}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="{Binding RadialMenuItem1Text}"  FontSize="14" TextAlignment="Center"/>
                    <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=RadialMenuCheckbox1IsChecked, Mode=OneWay}" Visibility="{Binding RadialMenuCheckbox1Visibility}" BorderBrush="{Binding Path=Appearance.ThemeColor}"/>
                </WrapPanel>
            </RadialMenu:RadialMenuItem>


            <RadialMenu:RadialMenuItem Visibility="Hidden"/>
            <RadialMenu:RadialMenuItem Visibility="Hidden"/>
            <RadialMenu:RadialMenuItem Visibility="Hidden"/>

            <!-- Add items as you want... -->

        </RadialMenu:RadialMenu>


        <!--#endregion-->

        <!--#region TabControl-->

        <!--The tab control with with tab tearing support.-->
        <ct:ChromeTabControl AddTabButtonBehavior="OpenNewTab"
                             ItemsSource="{Binding TabItems}"
                             SelectedItem="{Binding SelectedTabItem}"
                             SelectedIndex="{Binding SelectedTabIndex}"
                             IsAddButtonVisible="{Binding ShowAddButton}"
                             AddTabCommand="{Binding AddTabCommand}"
                             CloseTabCommand="{Binding CloseTabCommand}"
                             Grid.Row="1" Grid.Column="0"
                             IsEnabled="{Binding RadialMenuIsOpen, Converter={StaticResource InvertBoolean}}"
                             SelectedContent="0">

            <!-- BINDING CONTENT -->
            <ct:ChromeTabControl.ItemContainerStyle>
                <Style TargetType="ct:ChromeTabItem">
                    <Setter Property="Content" Value="{Binding Content}"/>
                </Style>
            </ct:ChromeTabControl.ItemContainerStyle>

            <!-- BINDING HEADER AND MAKING CONTEXT MENU-->
            <ct:ChromeTabControl.ItemTemplate>
                <DataTemplate>
                    <Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type ct:ChromeTabItem}}}">
                        <StackPanel Orientation="Horizontal"
                                    Background="Transparent">
                            <Image Source="{Binding Image}"
                                   Stretch="Fill"
                                       Margin="5,5,5,5" />
                            <TextBlock Text="{Binding Header}"
                                       TextWrapping="NoWrap"
                                       TextTrimming="CharacterEllipsis"
                                       VerticalAlignment="Center" />
                        </StackPanel>

                        <!--We can implement a context menu for the header here. The ChromeTabItems expose for convenience the following commands, "CloseTabCommand: close the current tab, "CloseAllTabsCommand", and "CloseOtherTabsCommand", which closes all tabs except the current.-->
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Close"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <MenuItem Header="Close all"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseAllTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <MenuItem Header="Close other tabs"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseOtherTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          CommandParameter="{Binding}" />
                            </ContextMenu>
                        </Grid.ContextMenu>
                    </Grid>
                </DataTemplate>
            </ct:ChromeTabControl.ItemTemplate>
        </ct:ChromeTabControl>

        <!--#endregion-->

        <!--#region PositionList-->
        <Border Grid.Row="1" Grid.Column="1" BorderThickness="2" BorderBrush="DarkGreen" Margin="0,24,0,0">
            <TextBlock Text="This is where position manager would be but we have wyjebane"
                   FontSize="18" Foreground="DarkGreen"
                   Margin="50, 50, 0, 0"
                   Grid.Row="1" Grid.Column="1">
                <TextBlock.RenderTransform>
                    <RotateTransform Angle="45"/>
                </TextBlock.RenderTransform>
            </TextBlock>
        </Border>

        <!--#endregion-->


    </Grid>


</UserControl>
