<UserControl x:Name="window"
             x:Class="IDE.Common.Views.Editor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:converters="clr-namespace:IDE.Common.ViewModels.Converters"
             d:DesignHeight="300" d:DesignWidth="300"
             mc:Ignorable="d"
             
             xmlns:RadialMenu="clr-namespace:RadialMenu.Controls;assembly=RadialMenu"
             xmlns:properties="clr-namespace:IDE.Properties"
             xmlns:ct="clr-namespace:ChromeTabs;assembly=ChromeTabs"
             xmlns:ctConv="clr-namespace:ChromeTabs.Converters;assembly=ChromeTabs">


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary  Source="/Icons/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:InvertBooleanConverter x:Key="InvertBoolean"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding CtrlSKey}"/>
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding CtrlNKey}"/>
        <KeyBinding Key="Esc" Command="{Binding EscKey}"/>
    </UserControl.InputBindings>


    <Grid>

        <!--#region RowDefinitions-->
        
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="9*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="6*"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>
        
        <!--#endregion-->
        
        <!--#region Menu-->

        <!-- Button enabling radial menu -->
        <RadialMenu:RadialMenu IsOpen="{Binding RadialMenuIsOpen, Converter={StaticResource InvertBoolean}}" Grid.RowSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-100,-125,0,0" ToolTip="Options">
            <RadialMenu:RadialMenu.CentralItem>
                <RadialMenu:RadialMenuCentralItem Command="{Binding OpenRadialMenuCommand}" BorderBrush="{Binding Path=Appearance.ThemeColor}">
                    <Rectangle Width="25" Height="25" Visibility="{Binding RadialMenuEnableButtonVisibility}">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_lines_horizontal_4}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                </RadialMenu:RadialMenuCentralItem>
            </RadialMenu:RadialMenu.CentralItem>
        </RadialMenu:RadialMenu>


        <!-- Radial menu -->
        <RadialMenu:RadialMenu IsOpen="{Binding RadialMenuIsOpen}" 
                               Grid.RowSpan="2" 
                               HorizontalAlignment="Left" 
                               VerticalAlignment="Top" 
                               Margin="-100,-125,0,0"
                               Panel.ZIndex="99">

            <!-- CentralMenuItem -->

            <RadialMenu:RadialMenu.CentralItem>
                <RadialMenu:RadialMenuCentralItem Command="{Binding CloseRadialMenuCommand}" BorderBrush="{Binding Path=Appearance.ThemeColor}" ToolTip="{Binding RadialMenuCentralItemTooltip}">
                    <Rectangle Width="25" Height="25">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_close}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                </RadialMenu:RadialMenuCentralItem>
            </RadialMenu:RadialMenu.CentralItem>

            <!-- MenuItems Around -->



            <RadialMenu:RadialMenuItem Visibility="Hidden" />

            <RadialMenu:RadialMenuItem Command="{Binding RadialMenuItem3Command}" Visibility="{Binding RadialMenuItem3Visibility}" ArrowBackground="{Binding RadialMenuArrow3Background}" EdgeBackground="{Binding Path=Appearance.ThemeColor}" ToolTip="{Binding RadialMenuItem3Tooltip}">
                <WrapPanel Orientation="Vertical">
                    <Rectangle Width="25" Height="25" Visibility="{Binding RadialMenuItem3IconVisibility}">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_settings}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="{Binding RadialMenuItem3Text}"  FontSize="14" TextAlignment="Center"/>
                </WrapPanel>
            </RadialMenu:RadialMenuItem>

            <RadialMenu:RadialMenuItem Command="{Binding RadialMenuItem2Command}" Visibility="{Binding RadialMenuItem2Visibility}" ArrowBackground="{Binding RadialMenuArrow2Background}" EdgeBackground="{Binding Path=Appearance.ThemeColor}" ToolTip="{Binding RadialMenuItem2Tooltip}">
                <WrapPanel Orientation="Vertical">
                    <Rectangle Width="25" Height="25" Visibility="{Binding RadialMenuItem2IconVisibility}">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_save}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="{Binding RadialMenuItem2Text}"  FontSize="14" TextAlignment="Center"/>
                    <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=RadialMenuCheckbox2IsChecked, Mode=OneWay}" Visibility="{Binding RadialMenuCheckbox2Visibility}" BorderBrush="{Binding Path=Appearance.ThemeColor}"/>
                </WrapPanel>
            </RadialMenu:RadialMenuItem>

            <RadialMenu:RadialMenuItem Command="{Binding RadialMenuItem1Command}" Visibility="{Binding RadialMenuItem1Visibility}" ArrowBackground="{Binding RadialMenuArrow1Background}" EdgeBackground="{Binding Path=Appearance.ThemeColor}" ToolTip="{Binding RadialMenuItem1Tooltip}">
                <WrapPanel Orientation="Vertical">
                    <Rectangle Width="20" Height="25" Visibility="{Binding RadialMenuItem1IconVisibility}">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_page}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="{Binding RadialMenuItem1Text}"  FontSize="14" TextAlignment="Center"/>
                    <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=RadialMenuCheckbox1IsChecked, Mode=OneWay}" Visibility="{Binding RadialMenuCheckbox1Visibility}" BorderBrush="{Binding Path=Appearance.ThemeColor}"/>
                </WrapPanel>
            </RadialMenu:RadialMenuItem>


            <RadialMenu:RadialMenuItem Visibility="Hidden"/>
            <RadialMenu:RadialMenuItem Visibility="Hidden"/>
            <RadialMenu:RadialMenuItem Visibility="Hidden"/>

        </RadialMenu:RadialMenu>

        <!--#endregion-->

        <!--#region TabControl-->

        <!--The tab control with with tab tearing support.-->
        <ct:ChromeTabControl AddTabButtonBehavior="OpenNewTab"
                             ItemsSource="{Binding TabItems}"
                             SelectedItem="{Binding SelectedTabItem}"
                             SelectedIndex="{Binding SelectedTabIndex}"
                             IsAddButtonVisible="{Binding ShowAddButton}"
                             AddTabCommand="{Binding AddTabCommand}"
                             CloseTabCommand="{Binding CloseTabCommand}"
                             Grid.Row="1" Grid.Column="0"
                             IsEnabled="{Binding RadialMenuIsOpen, Converter={StaticResource InvertBoolean}}"
                             SelectedContent="0">

            <!-- BINDING CONTENT -->
            <ct:ChromeTabControl.ItemContainerStyle>
                <Style TargetType="ct:ChromeTabItem">
                    <Setter Property="Content" Value="{Binding Content}"/>
                </Style>
            </ct:ChromeTabControl.ItemContainerStyle>

            <!-- BINDING HEADER AND MAKING CONTEXT MENU-->
            <ct:ChromeTabControl.ItemTemplate>
                <DataTemplate>
                    <Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type ct:ChromeTabItem}}}">
                        <StackPanel Orientation="Horizontal"
                                    Background="Transparent">
                            <Image Source="{Binding Image}"
                                   Stretch="Fill"
                                       Margin="5,5,5,5" />
                            <TextBlock Text="{Binding Header}"
                                       TextWrapping="NoWrap"
                                       TextTrimming="CharacterEllipsis"
                                       VerticalAlignment="Center" />
                        </StackPanel>

                        <!--We can implement a context menu for the header here. The ChromeTabItems expose for convenience the following commands, "CloseTabCommand: close the current tab, "CloseAllTabsCommand", and "CloseOtherTabsCommand", which closes all tabs except the current.-->
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Close"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <MenuItem Header="Close all"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseAllTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <MenuItem Header="Close other tabs"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseOtherTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          CommandParameter="{Binding}" />
                            </ContextMenu>
                        </Grid.ContextMenu>
                    </Grid>
                </DataTemplate>
            </ct:ChromeTabControl.ItemTemplate>
        </ct:ChromeTabControl>

        <!--#endregion-->

        <!--#region PositionList-->
        
        <Border Grid.Row="1" Grid.Column="1" BorderThickness="2" BorderBrush="DarkGreen" Margin="0,24,0,0">
            <TextBlock Text="This is where position manager would be but we just dont care"
                   FontSize="18" Foreground="DarkGreen"
                   Margin="150, 150, 0, 0"
                   Grid.Row="1" Grid.Column="1"
                   TextWrapping="Wrap">
                <TextBlock.RenderTransform>
                    <RotateTransform Angle="45"/>
                </TextBlock.RenderTransform>
            </TextBlock>
        </Border>

        <!--#endregion-->

    </Grid>


</UserControl>
