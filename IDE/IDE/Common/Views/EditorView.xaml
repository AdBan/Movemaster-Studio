<UserControl x:Name="window"
             x:Class="IDE.Common.Views.Editor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:IDE.Common.ViewModels.Converters"
             d:DesignHeight="600" d:DesignWidth="800"
             mc:Ignorable="d"
             xmlns:viewModels="clr-namespace:IDE.Common.ViewModels"
             d:DataContext="{d:DesignInstance viewModels:EditorViewModel, IsDesignTimeCreatable=True}"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:ct="clr-namespace:ChromeTabs;assembly=ChromeTabs"
             xmlns:models="clr-namespace:IDE.Common.Models"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">


    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Icons/Icons.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <converters:InvertBooleanConverter x:Key="InvertBoolean"/>
            <converters:RemoveStarConverter x:Key="RemoveStar"/>
            <converters:SolidColorToBrush x:Key="ColorToBrush"></converters:SolidColorToBrush>

            <Style TargetType="{x:Type models:ProgramEditor}">
                <Setter Property="Foreground" Value="{DynamicResource WindowText}"/>
                <Setter Property="Background" Value="Transparent"/>
            </Style>


            <!--HEADER TEMPLATE-->
            <DataTemplate x:Key="HeaderTemplate">
                <Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type ct:ChromeTabItem}}}">

                    <StackPanel Orientation="Horizontal"
                    Background="Transparent">
                        <Image Source="{Binding Image}" Stretch="Fill" Margin="5,5,5,5" />
                        <TextBlock Text="{Binding Header}"
                                TextWrapping="NoWrap"
                                TextTrimming="CharacterEllipsis"
                                VerticalAlignment="Center" 
                                Foreground="Black"/>
                    </StackPanel>


                    <Grid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Close"
                                           Command="{Binding Path=PlacementTarget.Tag.CloseTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                           CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />

                            <MenuItem Header="Close all"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseAllTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                           CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />

                            <MenuItem Header="Close other tabs"
                                           Command="{Binding Path=PlacementTarget.Tag.CloseOtherTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                           CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                           CommandParameter="{Binding}" />
                        </ContextMenu>
                    </Grid.ContextMenu>

                    <Grid.ToolTip>
                        <ToolTip Content="{Binding Header, Converter={StaticResource RemoveStar}}"/>
                    </Grid.ToolTip>
                </Grid>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding CtrlSKey}"/>
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding CtrlNKey}"/>
    </UserControl.InputBindings>



    <Grid>
        
        <!--#region RowDefinitions-->
        
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="7*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>
        
        <!--#endregion-->

        <!--#region Menu-->

        <StackPanel Orientation="Horizontal">

            <materialDesign:PopupBox Background="{DynamicResource ButtonBorder}" PlacementMode="BottomAndAlignCentres" Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}" BorderThickness="2" ToolTip="File" BorderBrush="#DDDDDD" Margin="30,0,0,0">
                <materialDesign:PopupBox.ToggleContent>
                    <materialDesign:PackIcon Kind="File" Width="24" Height="24" Foreground="{DynamicResource WindowText}"/>
                </materialDesign:PopupBox.ToggleContent>
                <StackPanel>
                    <Button Name="MenuElement" ToolTip="Create new tab" Command="{Binding MenuCreateCommand}" BorderThickness="2" BorderBrush="#DDDDDD" Background="{DynamicResource ButtonBorder}">
                        <materialDesign:PackIcon Kind="File" Foreground="{DynamicResource WindowText}"/>
                    </Button>
                    <Button ToolTip="Open tab from a file" Command="{Binding MenuOpenCommand}" BorderThickness="2" BorderBrush="#DDDDDD" Background="{DynamicResource ButtonBorder}">
                        <materialDesign:PackIcon Kind="FileDocument" Foreground="{DynamicResource WindowText}"/>
                    </Button>
                </StackPanel>
            </materialDesign:PopupBox>

            <materialDesign:PopupBox Background="{DynamicResource ButtonBorder}" PlacementMode="BottomAndAlignCentres" Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}" BorderThickness="2" ToolTip="Save" BorderBrush="#DDDDDD" Margin="30,0,0,0">
                <materialDesign:PopupBox.ToggleContent>
                    <materialDesign:PackIcon Kind="Floppy" Width="24" Height="24" Foreground="{DynamicResource WindowText}"/>
                </materialDesign:PopupBox.ToggleContent>
                <StackPanel>
                    <Button Name="MenuElement2" ToolTip="Save current tab" Command="{Binding MenuSaveCommand}" BorderThickness="2" BorderBrush="#DDDDDD" Background="{DynamicResource ButtonBorder}">
                        <materialDesign:PackIcon Kind="ContentSave" Foreground="{DynamicResource WindowText}"/>
                    </Button>
                    <Button ToolTip="Save current tab as" Command="{Binding MenuSaveAsCommand}" BorderThickness="2" BorderBrush="#DDDDDD" Background="{DynamicResource ButtonBorder}">
                        <materialDesign:PackIcon Kind="ContentSaveSettings" Foreground="{DynamicResource WindowText}"/>
                    </Button>
                    <Button ToolTip="Save all tabs" Command="{Binding MenuSaveAllCommand}" BorderThickness="2" BorderBrush="#DDDDDD" Background="{DynamicResource ButtonBorder}">
                        <materialDesign:PackIcon Kind="ContentSaveAll" Foreground="{DynamicResource WindowText}"/>
                    </Button>
                </StackPanel>
            </materialDesign:PopupBox>

        </StackPanel>

        <materialDesign:PopupBox HorizontalAlignment="Right" Grid.Column="1" StaysOpen="True" Background="{DynamicResource ButtonBorder}" PopupMode="Click" PlacementMode="BottomAndAlignCentres" Style="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}" ToolTip="Settings" BorderThickness="2" BorderBrush="#DDDDDD" Margin="0,0,30,0">
            <materialDesign:PopupBox.ToggleContent>
                <materialDesign:PackIcon Kind="Settings" Width="24" Height="24" Foreground="{DynamicResource WindowText}"/>
            </materialDesign:PopupBox.ToggleContent>
            <StackPanel>
                <Button ToolTip="If checked, intellisense will be enabled" BorderThickness="2" BorderBrush="#DDDDDD" Background="{DynamicResource ButtonBorder}">
                    <ToggleButton Content="i" Style="{StaticResource MaterialDesignActionLightToggleButton}"  Height="35" Width="35" IsChecked="{Binding IntellisenseIsChecked}" Foreground="{DynamicResource WindowText}" Background="{DynamicResource ButtonBorder}"/>
                </Button>
                <Button ToolTip="If checked, syntax check will be enabled" BorderThickness="2" BorderBrush="#DDDDDD" Background="{DynamicResource ButtonBorder}">
                    <ToggleButton Content="s" Style="{StaticResource MaterialDesignActionLightToggleButton}" Height="35" Width="35" IsChecked="{Binding SyntaxIsChecked}" Foreground="{DynamicResource WindowText}" Background="{DynamicResource ButtonBorder}"/>
                </Button>
            </StackPanel>
        </materialDesign:PopupBox>

        <!--#endregion-->
        
        <!--#region Tabs-->

        <ct:ChromeTabControl AddTabButtonBehavior="OpenNewTab"
                             ItemsSource="{Binding TabItems}"
                             SelectedItem="{Binding SelectedTabItem}"
                             AddTabCommand="{Binding AddTabCommand}"
                             CloseTabCommand="{Binding CloseTabCommand}"
                             ItemTemplate="{StaticResource HeaderTemplate}"
                             Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" 
                             SelectedTabBrush="#DDDDDD">

            <ct:ChromeTabControl.InputBindings>
                <MouseBinding Gesture="MiddleClick" Command="{Binding CloseTabCommand}"/>
            </ct:ChromeTabControl.InputBindings>


            <ct:ChromeTabControl.Resources>
                <Style TargetType="ct:ChromeTabItem">
                    <Setter Property="Content" Value="{Binding TabContent}"/>
                </Style>
            </ct:ChromeTabControl.Resources>

            <ct:ChromeTabControl.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Font Family">
                        <MenuItem.Icon>
                            <Image Source="/Icons/Font_16.png"/>
                        </MenuItem.Icon>
                        <MenuItem Header="Times New Roman" Command="{Binding ChangeFontCommand}" CommandParameter="Times New Roman">
                            <MenuItem.Icon>
                                <Image Source="/Icons/Font_16.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Arial" Command="{Binding ChangeFontCommand}" CommandParameter="Arial">
                            <MenuItem.Icon>
                                <Image Source="/Icons/Font_16.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Calibri" Command="{Binding ChangeFontCommand}" CommandParameter="Calibri">
                            <MenuItem.Icon>
                                <Image Source="/Icons/Font_16.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Segoe UI" Command="{Binding ChangeFontCommand}" CommandParameter="Segoe UI">
                            <MenuItem.Icon>
                                <Image Source="/Icons/Font_16.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </ContextMenu>
            </ct:ChromeTabControl.ContextMenu>


        </ct:ChromeTabControl>

        <!--#endregion-->
        
    </Grid>


</UserControl>
